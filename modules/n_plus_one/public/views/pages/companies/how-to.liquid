---
slug: companies/how-to
converter: markdown
---

# how to find all models in a max distance of x km from lat ln?

## 1. prepare custom model type definition

`custom_model_types/company.yaml`

```yaml
name: company
properties:
  - name: name
    type: string
  - name: state
    type: string
  - name: city
    type: string
  - name: location
    type: geojson
```

#### geojson field type
*geojson* type is a JSON format for encoding a variety of geographic data structures.
The following geometry types are supported:
- Point [long, lan]
```
    {
      "type": "Point",
      "coordinates": [100.0, 0.0]
    }
```
- LineString [[long, lan], [long, lan]]
- Polygon [[[long, lan], [long, lan]]]
```
    {
      "type": "Polygon",
      "coordinates": [[[100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0]]]
    }
```
- MultiPoint [[long, lan], [long, lan]]

More information: https://tools.ietf.org/html/rfc7946

## 2. import some data using graphql mutation

`createCompany.graphql`
```
mutation createCompany($location: JSONPayload, $city: String, $timezone: String, $name: String){
  customization_create(
    customization: {
      custom_model_type_name: "company"
      properties: [
        { name: "name" value: $name }
        { name: "city" value: $city }
        { name: "timezone" value: $timezone }
        { name: "location" value_json: $location }
      ]
    }
  ) {
    id
  }
}
```
`payload`
```
{
  "name": "Company Name",
    "city": "Boston",
    "timezone": "Timezone",
    "location": {
      "type": "Point",
      "coordinates": [-111.89903, 33.50921]
  }
}
```

## 3. prepare graphql query

`graph_queries/search.graphql`

```graphql
query search($point: GeometryJSON, $distance: Int) {
  companies: models(
    per_page: 100
    filter: {
      properties: [
        { name: "location", distance_sphere: {center: $point, distance_in_km: $distance}}
      ]
    }) {
    results {
      properties
    }
  }
}

```

## form configuration

alternatively record can be created also with form configuration

```
---
name: create_company
fields:
  properties:
    name:
      validation: { presence: true }
    city:
      validation: { presence: true }
    timezone:
      validation: { presence: true }
    location:
      validation: { geometry: true }
```

snippet of html field for geometry json - it's just textarea

```
{% raw %}
<div class="form-group">
  <label for="location">Location</label>
  <textarea required="true" id="location" type="text" class="form-control" name="{{ form_builder.fields.properties.location.name }}">
      {{- context.params.form.properties_attributes.location }}
  </textarea>
</div>
{% endraw %}
```

#### note
this example is for presentation only - in real scenario noone would provide a raw JSON as a location address - there will be a JavaScript function using external geolocation services for getting coordinates and then building required GeometryJSON structure.

#### example
https://alpha.staging.oregon.platform-os.com/companies/new

#### code samples
https://github.com/mdyd-dev/marketplace-nearme-example/blob/model-has-many-models/modules/n_plus_one/public/form_configurations/create_company.liquid
https://github.com/mdyd-dev/marketplace-nearme-example/blob/model-has-many-models/modules/n_plus_one/public/views/pages/companies/new.liquid

## 4. wrap it up on liquid page

`views/pages/search.liquid`
```
---
slug: search
---
{%- raw %}
{% parse_json location %}
{
  "type": "Point",
  "coordinates": [
    -111.89903,
    33.50921
  ]
}
{% endparse_json %}
{% assign distance = context.params.distance | default: 100 | plus: 0 %}

{% graphql g = 'search', point: location, distance: distance %}

{% for company in g.companies.results %}
[...]
{% endfor %}

{% endraw %}
```

#### working advanced example can be found:
- https://alpha.staging.oregon.platform-os.com/companies/search
#### code samples
- https://github.com/mdyd-dev/marketplace-nearme-example/blob/model-has-many-models/modules/n_plus_one/public/views/pages/companies/search.liquid
- https://github.com/mdyd-dev/marketplace-nearme-example/blob/model-has-many-models/modules/n_plus_one/public/custom_model_types/company.yml
- https://github.com/mdyd-dev/marketplace-nearme-example/blob/model-has-many-models/modules/n_plus_one/public/graph_queries/search.graphql


<style>
  pre { background-color: #fafafa; border: solid 1px #eee; padding: 10px; }
</style>
